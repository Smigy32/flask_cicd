# This is a basic workflow to help you get started with Actions

name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME : "flask-cicd-bucket"
  EB_APPLICATION_NAME       : "Flaskcicdapp"
  EB_ENVIRONMEMT_NAME       : "Flaskcicdapp-env"
  DEPLOY_PACKAGE_NAME       : "flask_app_${{ github.sha }}.zip"
  AWS_REGION_NAME           : "eu-central-1"
 
on:
  push:
    branches:
      - main


jobs:
  tests:
  
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.8.3"
    - name: Install dependencies
      run : |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run : |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run : |
        pytest tests/
    - name: Print msg about test success
      run : echo "Tests have been passed successfully!"
  
  build:
    runs-on: ubuntu-latest
    needs: [tests]
    
    steps:
    - name: Git clone our repo
      uses: actions/checkout@v1
    
    - name: Create ZIP deployment package
      run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
      
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id     : ${{ secrets.MY_AWS_ACCESS_KEY }}
        aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }}
        aws-region            : ${{ env.AWS_REGION_NAME }}
        
    - name: Copy Deployment package to S3 bucket
      run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
      
    - name: Print Happy Message for CI finish 
      run : echo "CI Pipeline part finished successfully!"
        
    
    
  
 
